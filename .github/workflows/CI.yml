name: Dockerize & Push AI Module Image to ECR (CI Step)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2                   
  ECR_REPOSITORY: ${{ secrets.AWS_ECR_AI_REPOSITORY_NAME }}     
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Checkout k8s repository
        uses: actions/checkout@v4
        with:
          repository: GCU-Home-Protector/protector-infra
          ref: main
          token: ${{secrets.ACTION_TOKEN}}
          path: home-protector-infra

      - name: Update AI image
        if: success()
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd home-protector-infra/overlays/develop/ai
          sed -i "s|image: ${ECR_REGISTRY}/${ECR_REPOSITORY}.*$|image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}|" patch-image.yaml
          cat patch-image.yaml

      - name: Push updated manifest
        run: |
          cd home-protector-infra

          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

          if [[ -n "$(git status --porcelain)" ]]; then
            git add overlays/develop/ai/patch-image.yaml
            git commit -m "chore : Update AI image tag to ${{ github.sha }}"
          else
            echo "No changes detected, creating empty commit to trigger ArgoCD"
            git commit --allow-empty -m "chore : Tag update fail"
          fi

          git push origin main

      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: Dockerfile
      #     platforms: linux/amd64
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
      #     cache-from: type=gha # gha = Github Actions
      #     cache-to: type=gha,mode=max

      # - name: Pull from docker hub and deploy
      #   uses: appleboy/ssh-action@master
      #   with:
      #     username: ${{ secrets.REMOTE_USERNAME }}
      #     host: ${{ secrets.REMOTE_HOST }}
      #     password: ${{ secrets.REMOTE_PASSWORD }}
      #     script: |
      #       cd /home/***/aiia-gpt-module
      #       docker compose down
      #       docker image rm aiiadev/gpt-module -f
      #       docker compose up -d
